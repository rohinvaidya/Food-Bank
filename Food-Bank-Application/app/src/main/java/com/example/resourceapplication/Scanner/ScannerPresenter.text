package com.example.resourceapplication.Scanner;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.Toast;

import com.example.resourceapplication.LogIn.ConnectionClass;
import com.example.resourceapplication.LogIn.MainActivity;
import com.example.resourceapplication.LogIn.UserLogIn;
import com.google.zxing.integration.android.IntentIntegrator;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;

public class ScannerPresenter {
    protected Scanner view;
    protected Activity activity;
    private String barcode;
    private UserLogIn user;
    private String authorizations;
    private String username;
    private String password;


    public ScannerPresenter(){

    }

    public ScannerPresenter(Scanner view){
        this.view = view;
        ArrayList<String> credentials = view.getCredentials();

        setCredentials(credentials);

        //this.connection = view.getIntent().getParcelableExtra("ConnectionObject");
        // this.user = view.getIntent().getParcelableExtra("UserObject");
    }

    public void setCredentials(ArrayList<String> credentials){
        this.username = credentials.get(0);
        this.password = credentials.get(1);
        this.authorizations = credentials.get(2);
    }

    public void getBarcode(String barcodeValue){
        this.barcode = '\''+barcodeValue+'\'';
        //Test on logcat
        Log.d("Barcode",barcode);

    }

    public void StartConnection(){
        DatabaseOperations databaseOperations = new DatabaseOperations();
        databaseOperations.execute();
    }


    public interface ScannerViewContract{

        public void getScanText();
        public Activity giveContext();
        public ArrayList<String> getCredentials();

    }

    public void StartReset(){
        ResetOperations resetoperations = new ResetOperations();
        resetoperations.execute();
    }


    class DatabaseOperations extends AsyncTask<String,String,Integer> {

        @Override
        protected Integer doInBackground(String... strings) {

            Connection connect = ConnectionClass.CONN();

            //String sql = "UPDATE dbo.[EKANBAN DATABASE] SET [SHORTAGE] = 1 WHERE [CATNO] ="+barcode;
            //String sql = "UPDATE EKANBAN DATABASE SET SHORTAGE = 1 WHERE CATNO ="+barcode;
            String date = "\'"+java.text.DateFormat.getDateTimeInstance().format(Calendar.getInstance().getTime())+"\'";
            String tempusername = "\'"+username+"\'";
            String sql = "UPDATE dbo.[DU250_EKANBAN] SET SHORTAGE = 1, INPUT_DATE = "+date+", [DU250_EKANBAN].USERNAME = '' , CLEAR_DATE = '' WHERE CATNO = "+barcode;
            //String sql = "SELECT CATNO FROM dbo.[EKANBAN DATABASE]";

            Integer result = 0;
            boolean res = false;

            try {
                assert connect != null;
                Statement updatestatement = connect.createStatement();
                result = updatestatement.executeUpdate(sql);
                connect.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }



            return result;
        }

        @Override
        protected void onPostExecute(Integer result) {

            if (result == 0) {
                Toast toast = Toast.makeText(view, "Material not registered, please contact the store", Toast.LENGTH_LONG);
                toast.show();
                Intent restartback = view.getIntent();
                view.finish();
                view.startActivity(restartback);

            } else {
                Toast toast = Toast.makeText(view, "Request Sent", Toast.LENGTH_LONG);
                toast.show();
                Intent restartback = view.getIntent();
                view.finish();
                view.startActivity(restartback);

            }


        }

    }

    class ResetOperations extends AsyncTask<String,String,Integer> {

        @Override
        protected Integer doInBackground(String... strings) {

            Connection connect = ConnectionClass.CONN();

            //String sql = "UPDATE dbo.[EKANBAN DATABASE] SET [SHORTAGE] = 1 WHERE [CATNO] ="+barcode;
            //String sql = "UPDATE EKANBAN DATABASE SET SHORTAGE = 1 WHERE CATNO ="+barcode;
            String date = "\'"+java.text.DateFormat.getDateTimeInstance().format(Calendar.getInstance().getTime())+"\'";
            username = "\'"+username+"\'";
            String sql = "UPDATE dbo.[DU250_EKANBAN] SET SHORTAGE = 0, CLEAR_DATE ="+date+" WHERE CATNO = "+barcode;
            //String sql = "SELECT CATNO FROM dbo.[EKANBAN DATABASE]";

            Integer result = 0;
            boolean res = false;

            try {
                assert connect != null;
                Statement updatestatement = connect.createStatement();
                result = updatestatement.executeUpdate(sql);
                connect.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }



            return result;
        }

        @Override
        protected void onPostExecute(Integer result) {

            if (result == 0) {
                Toast toast = Toast.makeText(view, "Material not registered, please contact the store", Toast.LENGTH_LONG);
                toast.show();
                Intent restartback = view.getIntent();
                view.finish();
                view.startActivity(restartback);

            } else {
                Toast toast = Toast.makeText(view, "Successfull", Toast.LENGTH_LONG);
                toast.show();
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                Intent restartback = view.getIntent();
                view.finish();
                view.startActivity(restartback);

            }


        }

    }


}